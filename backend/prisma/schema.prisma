// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  Worker
  Admin
  Costumer
}

model User {
  id           Int            @id @default(autoincrement())
  name         String?
  email        String         @unique
  password     String
  role         Role           @default(Costumer)
  created_at   DateTime       @default(now())
  token        Token?
  verified     Boolean        @default(false)
  ShippingInfo ShippingInfo[]
  Cart         Cart[]
}

model Token {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  token  String
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  total   Int       @default(0)
  Product Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  price       Float
  description String
  image       String
  Order       Order[]
  Cart        Cart[]
}

model Order {
  id         Int            @id @default(autoincrement())
  paidAt     DateTime       @default(now())
  orderId    Int
  product    Product        @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  totalPrice Float
  shipping   ShippingInfo[]
}

model ShippingInfo {
  id          Int    @id @default(autoincrement())
  Order       Order? @relation(fields: [orderId], references: [id])
  orderId     Int?
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
  address     String
  city        String
  state       String
  country     String
  pinCode     String
  phoneNumber String
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}
